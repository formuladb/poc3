apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pagerows-rows
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/configuration-snippet: |
      #set_by_lua_block $subdomain {
      #  local subdomain = string.match(ngx.var.host, "^(%w+)%..+$");
      #  ngx.log(ngx.ERR, "SSSS" .. ngx.var.host .. ", " .. (subdomain or "nil"))
      #  return subdomain
      #}
      #set $accept_profile "";
      #set $content_profile "";
      #if ($request_method = GET) {
      #  set $accept_profile $subdomain;
      #}
      #if ($request_method = GET) {
      #  set $accept_profile $subdomain;
      #}
      #if ($request_method = POST) {
      #  set $content_profile $subdomain;
      #}
      #if ($request_method = PATCH) {
      #  set $content_profile $subdomain;
      #}
      #if ($request_method = DELETE) {
      #  set $content_profile $subdomain;
      #}

      if ($cookie_dbrestauth) {
        set $auth "Bearer $cookie_dbrestauth";
      }
      if ($http_authorization) {
        set $auth $http_authorization;
      }
      if ($request_uri ~ /rpc/frmdb_login) {
        set $auth "";
      } 
      proxy_set_header Authorization $auth;
      #proxy_set_header Accept-Profile $accept_profile;
      #proxy_set_header Content-Profile $content_profile;
spec:
  rules:
  - http:
      paths:
      - path: /(rows-obj)/(upload/.*/.*/.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: rows
            port:
              number: 8080
      - path: /rows-db(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: db
            port:
              number: 3000
    {{ if .Values.ingress.host}}host: {{ .Values.ingress.host }}{{end}}
