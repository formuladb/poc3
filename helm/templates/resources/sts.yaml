apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: resources
spec:
  replicas: 1
  selector:
    matchLabels:
      service: resources
  serviceName: resources
  template:
    metadata:
      labels:
        service: resources
    spec:  
      containers:
      - name: resources
        image: {{ .Values.image_resources }}
        ports:
        - containerPort: 8080
        env:
        - { name: MINIO_ACCESS_KEY, value: "2VTDNqA7p9wlkNFgxB" }
        - { name: MINIO_SECRET_KEY, value: "S8wavKlP7DRTo5hXyEsBaCVjpW5qEs0dvcUDlOBcaFJdSSS3zILfoK9rXjfBGlVn" }
        #FIXME: replace with k8s secret
        - { name: JWT_SECRET, value: "asd1238d140dhoicoiqhewodqhed81-312d" }
        - { name: ENVTYPE, value: {{ .Values.envtype }} }
        - { name: PGPASSWORD,  value: postgres }
        volumeMounts:
          - mountPath: /tenants
            name: resources-persistence
          - mountPath: /bak-db
            name: bak-db
          - mountPath: /bak-obj
            name: bak-obj
      imagePullSecrets:
        - name: regcred
  volumeClaimTemplates:
  - metadata:
      name: bak-db
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 1Gi
{{ if eq .Values.envtype "production" }}
  - metadata:
      name: resources-persistence
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 1Gi
{{ else }}
      volumes:
      - name: resources-persistence
        persistentVolumeClaim:
        hostPath:
          path: /run/desktop/mnt/host/wsl/prw-tenants
          type: Directory
{{ end }}
