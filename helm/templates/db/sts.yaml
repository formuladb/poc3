apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      service: db
  serviceName: db
  template:
    metadata:
      labels:
        service: db
    spec:
      containers:
      - name: db
        image: {{ .Values.image_for_db }}
        imagePullPolicy: IfNotPresent
        command: ["docker-entrypoint.sh", "-c", "log_statement=all"]
        env:
        - name: POSTGRES_PASSWORD
          value: postgres
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: pg-persistence
          subPath: postgres
      - name: dbrest
        image: postgrest/postgrest:v7.0.1
        ports:
        - containerPort: 3000
        env:
        - { name: PGRST_DB_URI, value: 'postgres://postgres:postgres@localhost:5432' }
        - { name: PGRST_DB_ANON_ROLE, value: 'frmdb_anon' }
        - { name: PGRST_JWT_SECRET, value: 'asd1238d140dhoicoiqhewodqhed81-312d' }
        - { name: PGRST_DB_SCHEMA, value: 't0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,t15,t16,t17,t18,t19,t20,t21,t22,t23,t24,t25,t26,t27,t28,t29,t30,t31,t32,t33,t34,t35,t36,t37,t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68,t69,t70,t71,t72,t73,t74,t75,t76,t77,t78,t79,t80,t81,t82,t83,t84,t85,t86,t87,t88,t89,t90,t91,t92,t93,t94,t95,t96,t97,t98,t99' }
        resources: {}
      restartPolicy: Always
      imagePullSecrets:
        - name: regcred
  volumeClaimTemplates:
  - metadata:
      name: pg-persistence
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 10Gi
